/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.org.springframework.boot.spring.boot.starter.data.jpa
    api libs.org.springframework.boot.spring.boot.starter.thymeleaf
    api libs.org.springframework.boot.spring.boot.starter.validation
    api libs.org.springframework.boot.spring.boot.starter.web
    api libs.org.springdoc.springdoc.openapi.starter.webmvc.ui
    api libs.io.jsonwebtoken.jjwt.api
    api libs.org.springframework.boot.spring.boot.starter.logging
    api libs.org.springframework.boot.spring.boot.starter.data.redis
    api libs.org.springframework.boot.spring.boot.starter.cache
    api libs.org.springframework.boot.spring.boot.starter.security
    api libs.org.springframework.boot.spring.boot.starter.actuator
    api libs.io.micrometer.micrometer.registry.prometheus
    api libs.org.springframework.boot.spring.boot.starter.websocket
    api libs.org.springframework.boot.spring.boot.starter.oauth2.client
    api libs.org.springframework.boot.spring.boot.starter.webflux
    api libs.net.coobird.thumbnailator
    runtimeOnly libs.org.springframework.boot.spring.boot.devtools
    runtimeOnly libs.com.h2database.h2
    runtimeOnly libs.io.jsonwebtoken.jjwt.impl
    runtimeOnly libs.io.jsonwebtoken.jjwt.jackson
    testImplementation libs.org.springframework.boot.spring.boot.starter.test
    testImplementation libs.org.springframework.security.spring.security.test

	compileOnly("org.projectlombok:lombok:1.18.38")
	annotationProcessor("org.projectlombok:lombok:1.18.38")
	
	testCompileOnly("org.projectlombok:lombok:1.18.38")
	testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
}

group = 'com.shopping'
version = '0.0.1-SNAPSHOT'
description = 'shoppingmall-backend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}